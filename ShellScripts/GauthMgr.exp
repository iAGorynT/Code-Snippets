#!/usr/bin/env expect
# This script automates the authentication process for gauth and copies current code to clipboard

# Set timeout for expect commands (in seconds)
set timeout 10

# Error handling procedure
proc handle_error {message} {
    puts stderr "Error: $message"
    exit 1
}

# Signal handling procedure
proc cleanup {} {
    puts stderr "\nScript interrupted"
    exit 2
}

# Setup proper signal handling in Tcl/Expect
trap {cleanup} SIGINT
trap {cleanup} SIGTERM

# Get required environment variables
if {![info exists env(GAUTH_PASSWORD)]} {
    handle_error "GAUTH_PASSWORD environment variable not set"
}
set pw $env(GAUTH_PASSWORD)

if {![info exists env(GAUTH_KEY)]} {
    handle_error "GAUTH_KEY environment variable not set"
}
set rkey $env(GAUTH_KEY)

if {![info exists env(GAUTH_ACTION)]} {
    handle_error "GAUTH_ACTION environment variable not set"
}
set mact $env(GAUTH_ACTION)

# Main authentication process
log_user 0  # Suppress echoing of sensitive information

# Start the gauth process
if {[catch {spawn gauth $rkey $mact} err]} {
    handle_error "Failed to start gauth: $err"
}

# Handle password prompt
expect {
    "Encryption password: " {
        send "$pw\r"
    }
    timeout {
        handle_error "Timeout waiting for password prompt"
    }
    eof {
        handle_error "gauth process ended unexpectedly"
    }
}

# Handle password confirmation prompt
expect {
    "Encryption password: " {
        send "$pw\r"
    }
    timeout {
        handle_error "Timeout waiting for password prompt"
    }
    eof {
        handle_error "gauth process ended unexpectedly"
    }
}

# Enable user interaction with the terminal
interact
